version: '3.11'

services:
  redis:
    image: redis:7.0.12
    hostname: redis
    command: redis-server --port 6379
    restart: always
    ports:
      - "6379:6379"
    networks:
      - fso_network
    container_name: fso-redis
    volumes:
      - ./app/redis:/data

  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    container_name: fso-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - fso_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PORT: 8080
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - redis
    networks:
      - fso_network
    container_name: fso-server
    command: /start.sh

networks:
  fso_network: